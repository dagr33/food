name: Build & Deploy to EC2

on:
  push:
    branches: ["main"]

env:
  REGION: ${{ secrets.AWS_REGION }}
  REPO:   ${{ secrets.ECR_REPO_URL }}   # օրինակ: 123456789012.dkr.ecr.eu-central-1.amazonaws.com/myapp
  EC2_DIR: /opt/app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Backend image
      - name: Build & push backend
        run: |
          docker build -t $REPO:backend-latest ./backend
          docker push $REPO:backend-latest

      # Frontend image (եթե front-ը container-ով ես տալիս)
      - name: Build & push frontend
        if: ${{ hashFiles('frontend/**') != '' }}
        run: |
          docker build -t $REPO:frontend-latest ./frontend
          docker push $REPO:frontend-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      # copy docker-compose.yml (+ optional .env) դեպի EC2
      - name: Copy compose to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key:      ${{ secrets.EC2_SSH_KEY }}
          source:   "docker-compose.yaml"
          target:   "${{ env.EC2_DIR }}/"

      - name: Write SSH key (from secret)
        run: |
            umask 177
            cat > ec2_key.pem <<'EOF'
            ${{ secrets.EC2_SSH_KEY }}
              EOF
              sed -i 's/\r$//' ec2_key.pem
              ssh-keygen -l -f ec2_key.pem



      - name: Deploy on EC2 (login ECR → compose pull/up)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            # ensure docker & compose
            command -v docker || sudo apt update -y && sudo apt install -y docker.io
            sudo systemctl enable --now docker

            # ECR login
            aws ecr get-login-password --region ${{ env.REGION }} | \
              docker login --username AWS --password-stdin $(echo ${{ env.REPO }} | cut -d/ -f1)

            cd ${{ env.EC2_DIR }}
            export ECR_REPO_URL=${{ env.REPO }}
            docker compose pull
            docker compose up -d --remove-orphans
            docker compose ps
